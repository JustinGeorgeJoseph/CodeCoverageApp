apply plugin: 'jacoco'
apply plugin: "org.sonarqube"

jacoco{
    toolVersion = "0.8.8"
}

//tasks.withType(Test) {
//    finalizedBy jacocoTestReport
//    jacoco {
//        includeNoLocationClasses = true
//        excludes = ['jdk.internal.*'] // Allows it to run on Java 11
//    }
//}
//
//def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*', '**/*Activity.*']
//def javaTree = fileTree(dir: "$project.buildDir/intermediates/javac/debug/classes", excludes: fileFilter)
//def kotlinTree = fileTree(dir: "$project.buildDir/tmp/kotlin-classes/debug", excludes: fileFilter)
//def mainSrc = "$project.projectDir/src/main/java"
//
//task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest']) {
//
//    reports {
//        xml.required.set(true)
//        html.required.set(true)
//    }
//
//    sourceDirectories.setFrom(files([mainSrc]))
//    classDirectories.setFrom(files([javaTree,kotlinTree]))
//    executionData.setFrom(fileTree(dir: project.buildDir, includes: [
//            'jacoco/testDebugUnitTest.exec', 'outputs/code_coverage/debugAndroidTest/connected/**/*.ec'
//    ]))
//}


sonarqube {
    properties {
        property "sonar.projectName", "CodeCoverageCheck"
        property "sonar.projectKey", "CodeCoverageCheck"
        property "sonar.tests", ["src/test/java"]
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.jacoco.reportPath", "**/jacoco/*.exec"
        property "sonar.test.inclusions", "**/*Test*/**"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.sources", "src/main/java"
        property "sonar.exclusions", '**/*Test*/**,' +
                '*.json,' +
                '**/*test*/**,' +
                '**/.gradle/**,' +
                '**/R.class,' +
                '**/R$*.class'

        property "sonar.junit.reportPaths", "build/test-results/testDebugUnitTest"
        property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml"
    }
}